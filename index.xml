<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jcalado.com</title><link>https://jcalado.com/</link><description>Recent content on jcalado.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 23 Mar 2025 09:00:00 +0000</lastBuildDate><atom:link href="https://jcalado.com/index.xml" rel="self" type="application/rss+xml"/><item><title>HeidiSQL Password Decoder: A Secure Client-Side Recovery Tool</title><link>https://jcalado.com/post/2025/03/23/</link><pubDate>Sun, 23 Mar 2025 09:00:00 +0000</pubDate><guid>https://jcalado.com/post/2025/03/23/</guid><description>&lt;h1 id="-heidisql-password-decoder">🔐 HeidiSQL Password Decoder
&lt;/h1>&lt;p>I&amp;rsquo;m excited to share a new tool I&amp;rsquo;ve built that solves a common problem for database administrators who use HeidiSQL. Have you ever found yourself in a situation where you need to recover a database password from your HeidiSQL connection settings? Maybe you&amp;rsquo;re migrating to a new system or just need to share credentials with a colleague. That&amp;rsquo;s exactly why I created the HeidiSQL Password Decoder.&lt;/p>
&lt;p>&lt;img src="https://github.com/user-attachments/assets/60fe0ca5-0207-4311-8df3-bfe2cb76e479"
loading="lazy"
alt="HeidiSQL Password Decoder Screenshot"
>&lt;/p>
&lt;h2 id="the-problem">The Problem
&lt;/h2>&lt;p>HeidiSQL is a fantastic database management tool, but it stores your passwords in an encoded format in its settings file. While this isn&amp;rsquo;t true encryption (and isn&amp;rsquo;t meant to be), it does prevent casual viewing of your passwords. When you need those passwords outside of HeidiSQL, you&amp;rsquo;re typically out of luck.&lt;/p>
&lt;h2 id="the-solution">The Solution
&lt;/h2>&lt;p>This browser-based tool uses the same algorithm that HeidiSQL employs to encode/decode passwords but runs entirely in your browser. No data ever leaves your computer, making it a secure way to retrieve those passwords when you need them.&lt;/p>
&lt;h2 id="-key-features">✨ Key Features
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>🔒 100% Client-side Processing&lt;/strong>: All decoding happens in your browser - no data is ever sent to a server&lt;/li>
&lt;li>&lt;strong>🖥️ Clean Modern Interface&lt;/strong>: Intuitive design with visual feedback&lt;/li>
&lt;li>&lt;strong>📋 Easy Copy Functionality&lt;/strong>: One-click copy for decoded passwords&lt;/li>
&lt;li>&lt;strong>🔍 Smart Detection&lt;/strong>: Automatically finds password entries in your settings file&lt;/li>
&lt;li>&lt;strong>🌐 Works Offline&lt;/strong>: No internet connection required after initial page load&lt;/li>
&lt;/ul>
&lt;h2 id="-how-to-use-it">📋 How to Use It
&lt;/h2>&lt;p>The tool is designed to be as simple as possible:&lt;/p>
&lt;ol>
&lt;li>Export your HeidiSQL connection settings or copy from your sessions file&lt;/li>
&lt;li>Paste the contents into the text area&lt;/li>
&lt;li>Click &amp;ldquo;Decode Passwords&amp;rdquo;&lt;/li>
&lt;li>View all your server connections and their decoded passwords&lt;/li>
&lt;li>Copy any password with a single click&lt;/li>
&lt;/ol>
&lt;h2 id="-behind-the-scenes">🔍 Behind the Scenes
&lt;/h2>&lt;p>HeidiSQL&amp;rsquo;s password encoding is relatively straightforward. The encoded password format ends with a digit that indicates the shift value used in the encoding. Here&amp;rsquo;s the JavaScript function that powers the decoding:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">heidiDecode&lt;/span>(&lt;span style="color:#a6e22e">hex&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">shift&lt;/span> &lt;span style="color:#f92672">=&lt;/span> parseInt(&lt;span style="color:#a6e22e">hex&lt;/span>.&lt;span style="color:#a6e22e">substr&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">hex&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">hex&lt;/span>.&lt;span style="color:#a6e22e">substr&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">hex&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">hex&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">str&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> String.&lt;span style="color:#a6e22e">fromCharCode&lt;/span>(parseInt(&lt;span style="color:#a6e22e">hex&lt;/span>.&lt;span style="color:#a6e22e">substr&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>), &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">shift&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">str&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The algorithm works like this:&lt;/p>
&lt;ol>
&lt;li>It takes the last character of the encoded string as a &amp;ldquo;shift&amp;rdquo; value&lt;/li>
&lt;li>It processes the rest of the string in pairs of characters, treating them as hexadecimal values&lt;/li>
&lt;li>It converts each hex pair to a character code, subtracts the shift value, and converts to the corresponding character&lt;/li>
&lt;li>The resulting string is the original password&lt;/li>
&lt;/ol>
&lt;h2 id="-privacy-considerations">🔒 Privacy Considerations
&lt;/h2>&lt;p>When dealing with passwords, security is paramount. This tool was built with privacy as the top priority:&lt;/p>
&lt;ul>
&lt;li>No data is ever sent to any server&lt;/li>
&lt;li>All processing happens directly in your browser&lt;/li>
&lt;li>No cookies or local storage used&lt;/li>
&lt;li>No analytics or tracking&lt;/li>
&lt;li>No external requests after page load&lt;/li>
&lt;/ul>
&lt;h2 id="why-build-this">Why Build This?
&lt;/h2>&lt;p>As a developer who works with databases frequently, I&amp;rsquo;ve encountered situations where I needed to recover a HeidiSQL password. Rather than writing a quick script each time, I decided to build a proper tool that others might find useful as well.&lt;/p>
&lt;p>The project also gave me a chance to practice creating a focused, security-conscious web application that respects user privacy while solving a specific problem.&lt;/p>
&lt;h2 id="whats-next">What&amp;rsquo;s Next?
&lt;/h2>&lt;p>While the tool is fully functional as is, I&amp;rsquo;m considering adding support for additional database tools that use similar encoding methods. If you have suggestions or feature requests, feel free to reach out or contribute to the project.&lt;/p>
&lt;h2 id="try-it-yourself">Try It Yourself
&lt;/h2>&lt;p>The tool is available online &lt;a class="link" href="https://jcalado.com/heidisql_password_decoder/" target="_blank" rel="noopener"
>here&lt;/a> and the source code is &lt;a class="link" href="https://github.com/jcalado/heidisql_password_decoder" target="_blank" rel="noopener"
>available on GitHub&lt;/a> under the MIT license.&lt;/p></description></item><item><title>ACF to REST API update options pages</title><link>https://jcalado.com/post/2022/08/16/</link><pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate><guid>https://jcalado.com/post/2022/08/16/</guid><description>&lt;h1 id="acf-to-rest-api">ACF to REST API
&lt;/h1>&lt;p>Available here: &lt;a class="link" href="https://github.com/airesvsg/acf-to-rest-api" target="_blank" rel="noopener"
>https://github.com/airesvsg/acf-to-rest-api&lt;/a>&lt;/p>
&lt;p>Exposes ACF endpoints that would be otherwise missing.&lt;/p>
&lt;h2 id="get-values-from-options-pages">Get values from options pages
&lt;/h2>&lt;p>&lt;code>GET https://example.com/wp-json/acf/v3/options/page_settings/&lt;/code>&lt;/p>
&lt;p>where &lt;code>page_settings&lt;/code> identifies the options page in question.&lt;/p>
&lt;p>Returns:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;acf&amp;#34;&lt;/span>:{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;address&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;Address&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;social_fb&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;https:\/\/www.facebook.com\/example\/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;social_instagram&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;social_twitter&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;social_youtube&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;https:\/\/www.youtube.com\/example&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="to-update-values">To update values
&lt;/h2>&lt;p>&lt;code>POST https://example.com/wp-json/acf/v3/options/page_settings/&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;fields&amp;#34;&lt;/span>:{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;address&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;Address&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;social_fb&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;https:\/\/www.facebook.com\/example\/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;social_instagram&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;social_twitter&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;social_youtube&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;https:\/\/www.youtube.com\/example&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Attention:&lt;/strong> The json key is actually &amp;ldquo;fields&amp;rdquo; here, not the &amp;ldquo;acf&amp;rdquo; that is returned with the &lt;code>GET&lt;/code> call. 🤷‍♂️&lt;/p>
&lt;h3 id="doesnt-work-returns-error-500">Doesn&amp;rsquo;t work, returns error 500!
&lt;/h3>&lt;p>Add this to your functions.php, as stated in &lt;a class="link" href="https://github.com/airesvsg/acf-to-rest-api/issues/56" target="_blank" rel="noopener"
>https://github.com/airesvsg/acf-to-rest-api/issues/56&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">add_filter&lt;/span>( &lt;span style="color:#e6db74">&amp;#39;acf/location/rule_match/options_page&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>( $visibility ) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span> &lt;span style="color:#a6e22e">is_admin&lt;/span>() ) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> $visibility;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} );
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Paralell Youtube-DL downloads with powershell on windows</title><link>https://jcalado.com/post/2021/10/08/paralell-youtube/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/post/2021/10/08/paralell-youtube/</guid><description>&lt;p>Youtube-dl playlist downloads are done sequentially. However you can speed things up by running multiple youtube-dl processes in paralell.&lt;/p>
&lt;h2 id="requirements">Requirements
&lt;/h2>&lt;p>This will only work with PowerShell 7, not PowerShell 5.* which comes bundled with windows 10/11.&lt;/p>
&lt;p>&lt;strong>Check your Powershell version&lt;/strong> with&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Get-Host | Select-Object Version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are running the preinstalled windows powershell 5, update it: &lt;a class="link" href="https://docs.microsoft.com/en-us/powershell/scripting/whats-new/migrating-from-windows-powershell-51-to-powershell-7?view=powershell-7.1" target="_blank" rel="noopener"
>instructions here&lt;/a>.&lt;/p>
&lt;h3 id="quick-tip-updating-to-powershell-7-with-winget">Quick tip: Updating to powershell 7 with winget
&lt;/h3>&lt;p>If you have &lt;code>winget&lt;/code> already installed, just run&lt;/p>
&lt;pre tabindex="0">&lt;code>winget install --name PowerShell --exact --source winget
&lt;/code>&lt;/pre>&lt;h2 id="downloading-5-videos-simultaneously-from-a-youtube-playlist">Downloading 5 videos simultaneously from a youtube playlist
&lt;/h2>&lt;p>Launch powershell 7 and execute&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span> youtube-dl --get-id &lt;span style="color:#e6db74">&amp;#34;YOUR_YOUTUBE_PLAYLIST_URL&amp;#34;&lt;/span> | ForEach-Object -Parallel { youtube-dl.exe &lt;span style="color:#f92672">-f&lt;/span> best &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$_&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; } -ThrottleLimit &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will run 5 youtube-dl.exe processes simultaneously instead of each video only downloading after the previous is finished.&lt;/p></description></item><item><title>APOD</title><link>https://jcalado.com/project/apod/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/project/apod/</guid><description>&lt;img src="https://user-images.githubusercontent.com/26873/129795578-1adbdebe-b3a6-4fef-a24b-f26aceac1fe1.png" alt="Featured image of post APOD" />&lt;h1 id="apod">APOD
&lt;/h1>&lt;p>APOD stands for &amp;ldquo;Astronomy Picture Of the Day&amp;rdquo;.&lt;/p>
&lt;h1 id="app-download">App download
&lt;/h1>&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="screenshot">Screenshot
&lt;/h2>&lt;p>&lt;img src="https://jcalado.com/project/apod/image1.png"
width="1080"
height="2220"
srcset="https://jcalado.com/project/apod/image1_hu_9babe7d1903e3b59.png 480w, https://jcalado.com/project/apod/image1_hu_9d0fea4bb391f9f8.png 1024w"
loading="lazy"
alt="Detail page"
class="gallery-image"
data-flex-grow="48"
data-flex-basis="116px"
> &lt;img src="https://jcalado.com/project/apod/image2.png"
width="1080"
height="2220"
srcset="https://jcalado.com/project/apod/image2_hu_71fa28c2033ce581.png 480w, https://jcalado.com/project/apod/image2_hu_180225b0bb81ab09.png 1024w"
loading="lazy"
alt="Archive of previous APODs"
class="gallery-image"
data-flex-grow="48"
data-flex-basis="116px"
>&lt;/p>
&lt;h2 id="features">Features
&lt;/h2>&lt;ul>
&lt;li>Today&amp;rsquo;s &lt;a class="link" href="https://apod.nasa.gov/apod/" target="_blank" rel="noopener"
>APOD&lt;/a>&lt;/li>
&lt;li>Last 90 days worth of APODs&lt;/li>
&lt;li>Get a random APOD&lt;/li>
&lt;li>Share&lt;/li>
&lt;li>Support for videos and other web content&lt;/li>
&lt;/ul></description></item><item><title>QMK on the Anne Pro from Windows</title><link>https://jcalado.com/post/2021/08/05/qmk-anne-pro/</link><pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/post/2021/08/05/qmk-anne-pro/</guid><description>&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Attention:&lt;!-- raw HTML omitted --> The contents of this post apply to the original Anne Pro, not to the Anne Pro 2.&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;a class="link" href="https://qmk.fm/" target="_blank" rel="noopener"
>QMK&lt;/a> is a firmware for input devices:&lt;/p>
&lt;blockquote>
&lt;p>The goal of the QMK software project is to develop a completely customizable, powerful, and enjoyable firmware experience for any project - keyboard or otherwise - and to provide helpful, encouraging, and kind support and feedback for people with any software development experience.&lt;/p>&lt;/blockquote>
&lt;h2 id="ok-but-why">OK, but why?
&lt;/h2>&lt;h3 id="layers">Layers
&lt;/h3>&lt;p>Imagine pressing a key and all your keys now do something else. You can dedicated media keys on one of those layers, or the Function keys from F13 - F24&amp;hellip;&lt;/p>
&lt;h3 id="space-cadet-shift">Space cadet shift
&lt;/h3>&lt;blockquote>
&lt;p>Essentially, when you tap Left Shift on its own, you get an opening parenthesis; tap Right Shift on its own and you get the closing one. When held, the Shift keys function as normal. Yes, it&amp;rsquo;s as cool as it sounds, and now even cooler supporting Control and Alt as well!&lt;/p>&lt;/blockquote>
&lt;p>Pretty cool, right?&lt;/p>
&lt;h3 id="shift-alt-and-ctrl-tap">Shift, Alt and Ctrl tap
&lt;/h3>&lt;p>Hold shift / alt or ctrl for regular use, tap them for some othery keycode.&lt;/p>
&lt;p>Eg: Tapping shift and releasing can type &lt;code>&amp;lt;&lt;/code>. Or pause music. Or change to another layer, or cut/copy/paste&amp;hellip;.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h2 id="qmk-for-the-anne-pro">QMK For the Anne Pro
&lt;/h2>&lt;p>There is a fork of the firmware with support for the original Anne Pro which you can find here: &lt;a class="link" href="https://github.com/msvisser/qmk_firmware/tree/anne_pro/keyboards/anne_pro" target="_blank" rel="noopener"
>msvisser/qmk_firmware&lt;/a>.&lt;/p>
&lt;p>Thank you, &lt;a class="link" href="https://github.com/msvisser" target="_blank" rel="noopener"
>Michiel Visser&lt;/a>!&lt;/p>
&lt;h3 id="installing-from-windows">Installing from Windows
&lt;/h3>&lt;h4 id="1-install-drivers">1) Install drivers
&lt;/h4>&lt;p>For interacting with the keyboard in DFU mode, which allows you to flash a new firmware, you first need the drivers.&lt;/p>
&lt;p>Get the firmware update tools from the HexCore website:&lt;/p>
&lt;p>&lt;a class="link" href="https://service.hexcore.xyz/manual/annepro#41-update-firmware" target="_blank" rel="noopener"
>https://service.hexcore.xyz/manual/annepro#41-update-firmware&lt;/a>&lt;/p>
&lt;p>Direct link to firmware update tool:&lt;/p>
&lt;p>&lt;a class="link" href="https://service.hexcore.xyz/tools/anne_fw_update_tools.rar" target="_blank" rel="noopener"
>https://service.hexcore.xyz/tools/anne_fw_update_tools.rar&lt;/a>&lt;/p>
&lt;ol>
&lt;li>Unzip&lt;/li>
&lt;li>Open &amp;ldquo;Driver&amp;rdquo; folder&lt;/li>
&lt;li>Open Win8.1 folder&lt;/li>
&lt;li>Open x64 folder&lt;/li>
&lt;li>Install dpinst_amd64.exe&lt;/li>
&lt;li>Reboot&lt;/li>
&lt;/ol>
&lt;h4 id="2-download-and-compile-qmk">2) Download and compile QMK
&lt;/h4>&lt;p>I used WSL2, aka running linux inside windows for this part.&lt;/p>
&lt;p>Inside your WSL2 distro with git installed, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sh util/linux_install.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/msvisser/qmk_firmware.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout anne_pro
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make git-submodule
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compile the default keymap with&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make anne_pro:default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Convert the .bin file to a .dfu file for use with dfu-util on windows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./keyboards/anne_pro/dfuse-pack.py -b 0x08004000:anne_pro_default.bin anne_pro_default.dfu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-dfu-mode">3) DFU Mode
&lt;/h4>&lt;p>Place your keyboard in DFU mode:&lt;/p>
&lt;ol>
&lt;li>Connect your keyboard via USB&lt;/li>
&lt;li>Hold the Escape key&lt;/li>
&lt;li>Press the reset button on the back&lt;/li>
&lt;/ol>
&lt;h4 id="4-flash-firmware">4) Flash firmware
&lt;/h4>&lt;p>Open DfuSeDemo.exe from the Anne pro FW update tool package you downloaded earlier.
It should detect your DFU mode keyboard.&lt;/p>
&lt;p>Copy the &lt;code>anne_pro_default.dfu&lt;/code> file from your WSL installation to somewhere the app can access it.&lt;/p>
&lt;p>On the &amp;ldquo;Upgrade and verify&amp;rdquo; section of the app, click choose, pick your dfu file, then click upgrade.&lt;/p>
&lt;p>This should erase the current firmware and load the new one. When complete (there&amp;rsquo;s a progress bar), press the reset button on the back of the keyboard.&lt;/p>
&lt;h4 id="done-">Done 🥳
&lt;/h4>&lt;p>You now have a working Anne Pro with QMK.
Customize your own keymap if you want.
They&amp;rsquo;re inside &lt;code>keyboards/anne_pro/keymaps&lt;/code>.&lt;/p>
&lt;p>What I&amp;rsquo;ve done is duplicated the &lt;code>default&lt;/code> folder, renamed it &lt;code>jcalado&lt;/code> and customized the keymap to add media controls and such.&lt;/p>
&lt;p>You can compile this new keymap with&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>make anne_pro:jcalado
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./keyboards/anne_pro/dfuse-pack.py -b 0x08004000:anne_pro_jcalado.bin anne_pro_jcalado.dfu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="my-keymap">My keymap
&lt;/h4>&lt;p>My current keymap is also available on github (layer 3 is bluetooth configuration, layer 2 has RGB controls, page down / home / etc).&lt;/p>
&lt;p>&lt;strong>Layer 0&lt;/strong> - Tweaked Anne Pro Portuguese layout.&lt;/p>
&lt;ul>
&lt;li>Mod tap for left shift: Types &lt;code>&amp;lt;&lt;/code>. You can hold right shift and tap left shift to type &lt;code>&amp;gt;&lt;/code>. I usually type with an ISO keyboard and do lots of coding. I wanted to keep this key next to the left shift, so mod-tap was an option.&lt;/li>
&lt;li>Mod tap for left shift: Hold for regular behavior, tap types &lt;code>\&lt;/code>. Left shift + right shift tap types &lt;code>|&lt;/code>. Another ISO layout adaptation.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Layer 1&lt;/strong> - Anne pro keycap printed functions&lt;/p>
&lt;ul>
&lt;li>Pagedown, Page up, RGB lighting controls, F1-F12, etc.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Layer 2&lt;/strong> - Media Controls&lt;/p>
&lt;ul>
&lt;li>Media Play, Next, Previous&lt;/li>
&lt;li>Volume Up, down, mute&lt;/li>
&lt;li>F13 - F21&lt;/li>
&lt;li>Board reset&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Layer 3&lt;/strong> - Anne Pro Bluetooth configuration&lt;/p>
&lt;ul>
&lt;li>&lt;code>ESC&lt;/code> - Exit Bluetooth layer&lt;/li>
&lt;li>&lt;code>1, 2, 3, 4&lt;/code> - Connect to saved profile&lt;/li>
&lt;li>&lt;code>Q, W, E, R&lt;/code> - Save connection to profile&lt;/li>
&lt;li>&lt;code>A, S, D, F&lt;/code> - Delete saved connection&lt;/li>
&lt;li>&lt;code>0&lt;/code> - Toggle legacy Bluetooth mode&lt;/li>
&lt;li>&lt;code>-&lt;/code> - Disable Bluetooth&lt;/li>
&lt;li>&lt;code>+&lt;/code> - Enable Bluetooth&lt;/li>
&lt;/ul>
&lt;p>I also had it change colors when switching layers to highlight special functions, and layers other than 0 had a bliking red number corresponding to active layer, but it seems the lighting goes out of sync easily. Board issue, I&amp;rsquo;m sure.&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/jcalado/anne-pro-qmk-keymap" target="_blank" rel="noopener"
>https://github.com/jcalado/anne-pro-qmk-keymap&lt;/a>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Attention:&lt;!-- raw HTML omitted --> Layer 2&amp;rsquo;s media, volume and Fs only work when connected via USB.&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title>Environmental quality sensors - CML</title><link>https://jcalado.com/project/sensores-qa-cml/</link><pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/project/sensores-qa-cml/</guid><description>&lt;img src="https://user-images.githubusercontent.com/26873/125345226-2e621200-e350-11eb-8010-dea55b723a5a.png" alt="Featured image of post Environmental quality sensors - CML" />&lt;h1 id="environmental-quality-sensors---câmara-municipal-de-lisboa">Environmental quality sensors - Câmara Municipal de Lisboa
&lt;/h1>&lt;p>&lt;a class="link" href="https://jcalado.com/sensores-qa-cml" target="_blank" rel="noopener"
>https://jcalado.com/sensores-qa-cml&lt;/a>&lt;/p>
&lt;h2 id="screenshot">Screenshot
&lt;/h2>&lt;p>&lt;img src="https://user-images.githubusercontent.com/26873/125344050-b9420d00-e34e-11eb-9f8c-e449889aa01a.jpeg"
loading="lazy"
alt="Screenshot"
>&lt;/p>
&lt;h2 id="features">Features
&lt;/h2>&lt;ul>
&lt;li>Search by Sensor name&lt;/li>
&lt;li>Search by Category name&lt;/li>
&lt;li>Search by Station&lt;/li>
&lt;li>Some sensors have colored tresholds in place: low, medium, high, danger, extreme&lt;/li>
&lt;li>Every column is sortable&lt;/li>
&lt;/ul>
&lt;h2 id="notes">Notes
&lt;/h2>&lt;p>Requests are proxied through &lt;a class="link" href="http://allorigins.win/" target="_blank" rel="noopener"
>allorigins.win&lt;/a>, since the &lt;a class="link" href="http://opendata-cml.qart.pt:8080/lastmeasurements" target="_blank" rel="noopener"
>original API url&lt;/a> has CORS issues.&lt;/p>
&lt;h2 id="metadata-info">Metadata info
&lt;/h2>&lt;p>There&amp;rsquo;s some information about the API published here: &lt;a class="link" href="http://dados.cm-lisboa.pt/dataset/e7f31452-7d21-4b26-9eb5-1db62737a12d/resource/d8837f32-1f7e-4a61-bb8a-a2333f822edb/download/metadadosdadosabertos.pdf" target="_blank" rel="noopener"
>Metadata&lt;/a>&lt;/p></description></item><item><title>Semáforo de Vacinação COVID</title><link>https://jcalado.com/project/semaforo/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/project/semaforo/</guid><description>&lt;img src="https://i.postimg.cc/FKpftPKv/App.png" alt="Featured image of post Semáforo de Vacinação COVID" />&lt;h1 id="semáforo-de-vacinação-covid---mobile-app">Semáforo de Vacinação COVID - Mobile app
&lt;/h1>&lt;p>This react-native app will consume the same data as &lt;a class="link" href="https://covid19.min-saude.pt/cvc" target="_blank" rel="noopener"
>https://covid19.min-saude.pt/cvc&lt;/a> and present it in a friendly manner.
It is my first react-native app, so some things might not be 100% up to standard.&lt;/p>
&lt;h1 id="features">Features
&lt;/h1>&lt;ul>
&lt;li>Downloads realtime data from the API endpoint&lt;/li>
&lt;li>Searches by location or center name&lt;/li>
&lt;li>Shows a map with API provided markers so you can have a sense of scale. There are a lot of centers!&lt;/li>
&lt;li>Displays how old the API provided data is, so the user is not mislead.&lt;/li>
&lt;li>Provides undocumented stats such as &amp;ldquo;Pessoas em recobro&amp;rdquo;, &amp;ldquo;Pessoas em espera&amp;rdquo;&lt;/li>
&lt;li>Pull down to refresh data&lt;/li>
&lt;/ul>
&lt;p>&lt;a class="link" href="https://github.com/jcalado/semaforodevacinacao" target="_blank" rel="noopener"
>https://github.com/jcalado/semaforodevacinacao&lt;/a>&lt;/p>
&lt;h1 id="screenshots">Screenshots
&lt;/h1>&lt;p>&lt;img src="https://i.postimg.cc/kMxCY2YN/Screenshot-1625991749.png"
loading="lazy"
alt="Main page"
>
&lt;img src="https://i.postimg.cc/Dy6TFtT8/Screenshot-1625991778.png"
loading="lazy"
alt="Details page"
>
&lt;img src="https://i.postimg.cc/pXRHwP3w/Screenshot-1625991789.png"
loading="lazy"
alt="More details"
>
&lt;img src="https://i.postimg.cc/MprJfVXw/Screenshot-1625991824.png"
loading="lazy"
alt="Map"
>
&lt;img src="https://i.postimg.cc/sg2R2wjK/Screenshot-1625991858.png"
loading="lazy"
alt="Searching centers"
>&lt;/p></description></item><item><title>VDO.Ninja invite generator</title><link>https://jcalado.com/project/vdon-invite/</link><pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/project/vdon-invite/</guid><description>&lt;img src="https://i.ibb.co/8B3Q0VV/Screenshot-2021-01-17-100752.png" alt="Featured image of post VDO.Ninja invite generator" />&lt;h1 id="vdon-invite">VDON-invite
&lt;/h1>&lt;p>Generates VDO.Ninja invites tailored to the user preferences by toggling switches on or off.&lt;/p>
&lt;p>&lt;img src="https://i.ibb.co/8B3Q0VV/Screenshot-2021-01-17-100752.png"
loading="lazy"
alt="VDON-invite as of 2021-01-17"
>&lt;/p>
&lt;h1 id="features">Features
&lt;/h1>&lt;ul>
&lt;li>Expanding panel UI&lt;/li>
&lt;li>Popover information&lt;/li>
&lt;li>Loads data from external json file, allowing for complete reorder of toggles.&lt;/li>
&lt;li>Generates additional VDO.Ninja director page URL when appropriate&lt;/li>
&lt;li>Generates custom view links&lt;/li>
&lt;li>Click to copy urls&lt;/li>
&lt;li>Optionally obfuscates links via invite.cam&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted --></description></item><item><title>invite.vdo.ninja</title><link>https://jcalado.com/post/2021/05/07/invite.obs.ninja/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/post/2021/05/07/invite.obs.ninja/</guid><description>&lt;p>&lt;img src="https://jcalado.com/post/2021/05/07/invite.obs.ninja/images/invite.obs.ninja.png"
width="1920"
height="1080"
srcset="https://jcalado.com/post/2021/05/07/invite.obs.ninja/images/invite.obs.ninja_hu_d0214e0cd8a41119.png 480w, https://jcalado.com/post/2021/05/07/invite.obs.ninja/images/invite.obs.ninja_hu_e80f395624f436fe.png 1024w"
loading="lazy"
alt="Screenshot of the page as of 2021"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h3 id="what-is-vdoninja">What is &lt;a class="link" href="https://vdo.ninja" target="_blank" rel="noopener"
>VDO.ninja&lt;/a>?
&lt;/h3>&lt;blockquote>
&lt;p>Bring live video from your smartphone, remote computer, or friends directly into OBS or other studio software.&lt;/p>&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://vdo.ninja" target="_blank" rel="noopener"
>VDO.ninja&lt;/a> uses &lt;a class="link" href="https://webrtc.org" target="_blank" rel="noopener"
>WebRTC&lt;/a> to send and receive video and audio streams over the public internet, while keeping the latency as low as possible. There are no servers involved in bouncing the video around, apart from very specific cases.&lt;/p>
&lt;h3 id="what-is-invitevdoninja">What is invite.vdo.ninja?
&lt;/h3>&lt;p>&lt;a class="link" href="https://invite.vdo.ninja" target="_blank" rel="noopener"
>Invite.vdo.ninja&lt;/a> is a way to generate custom invite urls for, well, vdo.ninja.&lt;br>
If you are only starting your ninja journey, it can help you extract more from it without needing to dive too deep onto the documentation.&lt;/p>
&lt;h3 id="example-use-case">Example use case
&lt;/h3>&lt;p>Want to generate a ninja invite with:&lt;/p>
&lt;ul>
&lt;li>Auto-selected &amp;amp; auto-started webcam&lt;/li>
&lt;li>Use a password&lt;/li>
&lt;li>Label the user, so you can use it later&lt;/li>
&lt;li>Custom predefined link for your mixer software&lt;/li>
&lt;/ul>
&lt;p>Say no more.&lt;/p>
&lt;hr>
&lt;h3 id="make-it-so">Make it so
&lt;/h3>&lt;ol>
&lt;li>Visit &lt;a class="link" href="https://invite.vdo.ninja" target="_blank" rel="noopener"
>invite.vdo.ninja&lt;/a>&lt;/li>
&lt;li>Set a custom push ID inside the &lt;strong>Invite&lt;/strong> panel, under &lt;strong>Custom Push ID&lt;/strong>. In this case I chose &lt;code>thisISmycustomLink&lt;/code>. Pick a password and set it up as well. I chose &lt;code>passwordisSafe&lt;/code>.&lt;/li>
&lt;li>Select &lt;strong>webcam&lt;/strong> under the &lt;strong>Sharing types&lt;/strong> panel.&lt;/li>
&lt;li>Select the &lt;strong>Auto-Start&lt;/strong> option under &lt;strong>Guest Features&lt;/strong>. Type a display name while you’re at it – it’s the &lt;strong>Set display name&lt;/strong> option. I chose &lt;code>Joel&lt;/code>. Make sure you click out of the field for the generated URL to update.&lt;/li>
&lt;li>The generated link is at the bottom of the page. You can click the “Obfuscate” button near the link to make it a really long and really complicated URL. This will prevent my friend from messing with any of the options I set.&lt;/li>
&lt;li>You can copy the link to send to your guest by just clicking on it.&lt;/li>
&lt;/ol>
&lt;p>Then pull in your guest&amp;rsquo;s / friend webcam inside your OBS with the link &lt;code>https://vdo.ninja/?view=CUSTOM_ID&amp;amp;password=PASSWORD&lt;/code>.&lt;/p>
&lt;p>Replace &lt;em>CUSTOM_ID&lt;/em> with your push id, in my case: &lt;code>thisISmycustomLink&lt;/code>.&lt;br>
Replace &lt;em>PASSWORD&lt;/em> with your password, in my case: &lt;code>passwordisSafe&lt;/code>.&lt;/p>
&lt;p>You can just drag and drop this url on the &lt;strong>Scenes&lt;/strong> panel of OBS and it will take care of everything for you. You can also manually set it up by adding a new browser source and pasting in the link.&lt;/p>
&lt;p>In any case, &lt;strong>make sure that browser source has “Control audio via OBS” active&lt;/strong>.&lt;/p>
&lt;h3 id="video-tutorial">Video tutorial
&lt;/h3>&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/5dU28ycxo4E"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;p>There&amp;rsquo;s a whole lot more that can be done with &lt;a class="link" href="https://invite.vdo.ninja" target="_blank" rel="noopener"
>invite.vdo.ninja&lt;/a>.&lt;/p>
&lt;p>Explore the site, learn ninja, be the ninja!&lt;/p></description></item><item><title>CGTimer</title><link>https://jcalado.com/project/cgtimer/</link><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/project/cgtimer/</guid><description>&lt;img src="https://github.com/jcalado/cgtimer/raw/master/screenshots/Standby.png" alt="Featured image of post CGTimer" />&lt;h1 id="cgtimer">CGTimer
&lt;/h1>&lt;p>CGTimer is an electron app to display current video time from a CasparCG server instance.&lt;/p>
&lt;h1 id="features">Features
&lt;/h1>&lt;ul>
&lt;li>Displays active clip current time&lt;/li>
&lt;li>Displays remaining clip time&lt;/li>
&lt;li>Starts flashing red at less than 5 seconds to clip end&lt;/li>
&lt;li>Warns about video being looped, via a red &amp;ldquo;L&amp;rdquo; on the clip time panel&lt;/li>
&lt;li>When CasparCG is issued a STOP command to the ffmpeg producer, everything is reset&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://github.com/jcalado/cgtimer/raw/master/screenshots/Standby.png"
loading="lazy"
alt="preview"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/jcalado/cgtimer" target="_blank" rel="noopener"
>https://github.com/jcalado/cgtimer&lt;/a>&lt;/p></description></item><item><title>Hyperdeckctl</title><link>https://jcalado.com/project/hyperdeckctl/</link><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate><guid>https://jcalado.com/project/hyperdeckctl/</guid><description>&lt;img src="https://raw.githubusercontent.com/jcalado/hyperdeckctl/main/screenshots/screenshot01.png" alt="Featured image of post Hyperdeckctl" />&lt;h1 id="hyperdeckctl">Hyperdeckctl
&lt;/h1>&lt;p>hyperdeckctl allows you to trigger common functions of your Blackmagic Design Hyperdeck recorders from a single interface.&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/jcalado/hyperdeckctl/main/screenshots/screenshot01.png"
loading="lazy"
alt="preview"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/jcalado/hyperdeckctl" target="_blank" rel="noopener"
>https://github.com/jcalado/hyperdeckctl&lt;/a>&lt;/p></description></item><item><title>IASDCG</title><link>https://jcalado.com/project/iasdcg/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://jcalado.com/project/iasdcg/</guid><description>&lt;img src="https://adv7.pt/imagens/7cg.jpg" alt="Featured image of post IASDCG" />&lt;p>IASDCG was my first ever C# WPF app and it was used to control casparcg servers, with features tailored for local Seventh-day Adventist Churches.&lt;/p></description></item><item><title>Archives</title><link>https://jcalado.com/page/archives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jcalado.com/page/archives/</guid><description/></item><item><title>Search</title><link>https://jcalado.com/page/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jcalado.com/page/search/</guid><description/></item></channel></rss>