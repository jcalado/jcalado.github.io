[{"content":"üîê HeidiSQL Password Decoder I\u0026rsquo;m excited to share a new tool I\u0026rsquo;ve built that solves a common problem for database administrators who use HeidiSQL. Have you ever found yourself in a situation where you need to recover a database password from your HeidiSQL connection settings? Maybe you\u0026rsquo;re migrating to a new system or just need to share credentials with a colleague. That\u0026rsquo;s exactly why I created the HeidiSQL Password Decoder.\nThe Problem HeidiSQL is a fantastic database management tool, but it stores your passwords in an encoded format in its settings file. While this isn\u0026rsquo;t true encryption (and isn\u0026rsquo;t meant to be), it does prevent casual viewing of your passwords. When you need those passwords outside of HeidiSQL, you\u0026rsquo;re typically out of luck.\nThe Solution This browser-based tool uses the same algorithm that HeidiSQL employs to encode/decode passwords but runs entirely in your browser. No data ever leaves your computer, making it a secure way to retrieve those passwords when you need them.\n‚ú® Key Features üîí 100% Client-side Processing: All decoding happens in your browser - no data is ever sent to a server üñ•Ô∏è Clean Modern Interface: Intuitive design with visual feedback üìã Easy Copy Functionality: One-click copy for decoded passwords üîç Smart Detection: Automatically finds password entries in your settings file üåê Works Offline: No internet connection required after initial page load üìã How to Use It The tool is designed to be as simple as possible:\nExport your HeidiSQL connection settings or copy from your sessions file Paste the contents into the text area Click \u0026ldquo;Decode Passwords\u0026rdquo; View all your server connections and their decoded passwords Copy any password with a single click üîç Behind the Scenes HeidiSQL\u0026rsquo;s password encoding is relatively straightforward. The encoded password format ends with a digit that indicates the shift value used in the encoding. Here\u0026rsquo;s the JavaScript function that powers the decoding:\nfunction heidiDecode(hex) { var str = \u0026#39;\u0026#39;; var shift = parseInt(hex.substr(-1)); hex = hex.substr(0, hex.length - 1); for (var i = 0; i \u0026lt; hex.length; i += 2) str += String.fromCharCode(parseInt(hex.substr(i, 2), 16) - shift); return str; } The algorithm works like this:\nIt takes the last character of the encoded string as a \u0026ldquo;shift\u0026rdquo; value It processes the rest of the string in pairs of characters, treating them as hexadecimal values It converts each hex pair to a character code, subtracts the shift value, and converts to the corresponding character The resulting string is the original password üîí Privacy Considerations When dealing with passwords, security is paramount. This tool was built with privacy as the top priority:\nNo data is ever sent to any server All processing happens directly in your browser No cookies or local storage used No analytics or tracking No external requests after page load Why Build This? As a developer who works with databases frequently, I\u0026rsquo;ve encountered situations where I needed to recover a HeidiSQL password. Rather than writing a quick script each time, I decided to build a proper tool that others might find useful as well.\nThe project also gave me a chance to practice creating a focused, security-conscious web application that respects user privacy while solving a specific problem.\nWhat\u0026rsquo;s Next? While the tool is fully functional as is, I\u0026rsquo;m considering adding support for additional database tools that use similar encoding methods. If you have suggestions or feature requests, feel free to reach out or contribute to the project.\nTry It Yourself The tool is available online here and the source code is available on GitHub under the MIT license.\n","date":"2025-03-23T09:00:00Z","permalink":"https://jcalado.com/post/2025/03/23/","title":"HeidiSQL Password Decoder: A Secure Client-Side Recovery Tool"},{"content":"ACF to REST API Available here: https://github.com/airesvsg/acf-to-rest-api\nExposes ACF endpoints that would be otherwise missing.\nGet values from options pages GET https://example.com/wp-json/acf/v3/options/page_settings/\nwhere page_settings identifies the options page in question.\nReturns:\n{ \u0026#34;acf\u0026#34;:{ \u0026#34;address\u0026#34;:\u0026#34;Address\u0026#34;, \u0026#34;social_fb\u0026#34;:\u0026#34;https:\\/\\/www.facebook.com\\/example\\/\u0026#34;, \u0026#34;social_instagram\u0026#34;:\u0026#34;\u0026#34;, \u0026#34;social_twitter\u0026#34;:\u0026#34;\u0026#34;, \u0026#34;social_youtube\u0026#34;:\u0026#34;https:\\/\\/www.youtube.com\\/example\u0026#34; } } To update values POST https://example.com/wp-json/acf/v3/options/page_settings/\n{ \u0026#34;fields\u0026#34;:{ \u0026#34;address\u0026#34;:\u0026#34;Address\u0026#34;, \u0026#34;social_fb\u0026#34;:\u0026#34;https:\\/\\/www.facebook.com\\/example\\/\u0026#34;, \u0026#34;social_instagram\u0026#34;:\u0026#34;\u0026#34;, \u0026#34;social_twitter\u0026#34;:\u0026#34;\u0026#34;, \u0026#34;social_youtube\u0026#34;:\u0026#34;https:\\/\\/www.youtube.com\\/example\u0026#34; } } Attention: The json key is actually \u0026ldquo;fields\u0026rdquo; here, not the \u0026ldquo;acf\u0026rdquo; that is returned with the GET call. ü§∑‚Äç‚ôÇÔ∏è\nDoesn\u0026rsquo;t work, returns error 500! Add this to your functions.php, as stated in https://github.com/airesvsg/acf-to-rest-api/issues/56\nadd_filter( \u0026#39;acf/location/rule_match/options_page\u0026#39;, function( $visibility ) { if ( ! is_admin() ) { return true; } return $visibility; } ); ","date":"2022-08-16T00:00:00Z","permalink":"https://jcalado.com/post/2022/08/16/","title":"ACF to REST API update options pages"},{"content":"Youtube-dl playlist downloads are done sequentially. However you can speed things up by running multiple youtube-dl processes in paralell.\nRequirements This will only work with PowerShell 7, not PowerShell 5.* which comes bundled with windows 10/11.\nCheck your Powershell version with\nGet-Host | Select-Object Version If you are running the preinstalled windows powershell 5, update it: instructions here.\nQuick tip: Updating to powershell 7 with winget If you have winget already installed, just run\nwinget install --name PowerShell --exact --source winget Downloading 5 videos simultaneously from a youtube playlist Launch powershell 7 and execute\nyoutube-dl --get-id \u0026#34;YOUR_YOUTUBE_PLAYLIST_URL\u0026#34; | ForEach-Object -Parallel { youtube-dl.exe -f best \u0026#34;$_\u0026#34;; } -ThrottleLimit 5 This will run 5 youtube-dl.exe processes simultaneously instead of each video only downloading after the previous is finished.\n","date":"2021-10-08T00:00:00Z","permalink":"https://jcalado.com/post/2021/10/08/paralell-youtube/","title":"Paralell Youtube-DL downloads with powershell on windows"},{"content":"Attention: The contents of this post apply to the original Anne Pro, not to the Anne Pro 2.\nQMK is a firmware for input devices:\nThe goal of the QMK software project is to develop a completely customizable, powerful, and enjoyable firmware experience for any project - keyboard or otherwise - and to provide helpful, encouraging, and kind support and feedback for people with any software development experience.\nOK, but why? Layers Imagine pressing a key and all your keys now do something else. You can dedicated media keys on one of those layers, or the Function keys from F13 - F24\u0026hellip;\nSpace cadet shift Essentially, when you tap Left Shift on its own, you get an opening parenthesis; tap Right Shift on its own and you get the closing one. When held, the Shift keys function as normal. Yes, it\u0026rsquo;s as cool as it sounds, and now even cooler supporting Control and Alt as well!\nPretty cool, right?\nShift, Alt and Ctrl tap Hold shift / alt or ctrl for regular use, tap them for some othery keycode.\nEg: Tapping shift and releasing can type \u0026lt;. Or pause music. Or change to another layer, or cut/copy/paste\u0026hellip;.\nQMK For the Anne Pro There is a fork of the firmware with support for the original Anne Pro which you can find here: msvisser/qmk_firmware.\nThank you, Michiel Visser!\nInstalling from Windows 1) Install drivers For interacting with the keyboard in DFU mode, which allows you to flash a new firmware, you first need the drivers.\nGet the firmware update tools from the HexCore website:\nhttps://service.hexcore.xyz/manual/annepro#41-update-firmware\nDirect link to firmware update tool:\nhttps://service.hexcore.xyz/tools/anne_fw_update_tools.rar\nUnzip Open \u0026ldquo;Driver\u0026rdquo; folder Open Win8.1 folder Open x64 folder Install dpinst_amd64.exe Reboot 2) Download and compile QMK I used WSL2, aka running linux inside windows for this part.\nInside your WSL2 distro with git installed, run:\nsh util/linux_install.sh git clone https://github.com/msvisser/qmk_firmware.git git checkout anne_pro make git-submodule Compile the default keymap with\nmake anne_pro:default Convert the .bin file to a .dfu file for use with dfu-util on windows:\n./keyboards/anne_pro/dfuse-pack.py -b 0x08004000:anne_pro_default.bin anne_pro_default.dfu 3) DFU Mode Place your keyboard in DFU mode:\nConnect your keyboard via USB Hold the Escape key Press the reset button on the back 4) Flash firmware Open DfuSeDemo.exe from the Anne pro FW update tool package you downloaded earlier. It should detect your DFU mode keyboard.\nCopy the anne_pro_default.dfu file from your WSL installation to somewhere the app can access it.\nOn the \u0026ldquo;Upgrade and verify\u0026rdquo; section of the app, click choose, pick your dfu file, then click upgrade.\nThis should erase the current firmware and load the new one. When complete (there\u0026rsquo;s a progress bar), press the reset button on the back of the keyboard.\nDone ü•≥ You now have a working Anne Pro with QMK. Customize your own keymap if you want. They\u0026rsquo;re inside keyboards/anne_pro/keymaps.\nWhat I\u0026rsquo;ve done is duplicated the default folder, renamed it jcalado and customized the keymap to add media controls and such.\nYou can compile this new keymap with\nmake anne_pro:jcalado ./keyboards/anne_pro/dfuse-pack.py -b 0x08004000:anne_pro_jcalado.bin anne_pro_jcalado.dfu My keymap My current keymap is also available on github (layer 3 is bluetooth configuration, layer 2 has RGB controls, page down / home / etc).\nLayer 0 - Tweaked Anne Pro Portuguese layout.\nMod tap for left shift: Types \u0026lt;. You can hold right shift and tap left shift to type \u0026gt;. I usually type with an ISO keyboard and do lots of coding. I wanted to keep this key next to the left shift, so mod-tap was an option. Mod tap for left shift: Hold for regular behavior, tap types \\. Left shift + right shift tap types |. Another ISO layout adaptation. Layer 1 - Anne pro keycap printed functions\nPagedown, Page up, RGB lighting controls, F1-F12, etc. Layer 2 - Media Controls\nMedia Play, Next, Previous Volume Up, down, mute F13 - F21 Board reset Layer 3 - Anne Pro Bluetooth configuration\nESC - Exit Bluetooth layer 1, 2, 3, 4 - Connect to saved profile Q, W, E, R - Save connection to profile A, S, D, F - Delete saved connection 0 - Toggle legacy Bluetooth mode - - Disable Bluetooth + - Enable Bluetooth I also had it change colors when switching layers to highlight special functions, and layers other than 0 had a bliking red number corresponding to active layer, but it seems the lighting goes out of sync easily. Board issue, I\u0026rsquo;m sure.\nhttps://github.com/jcalado/anne-pro-qmk-keymap\nAttention: Layer 2\u0026rsquo;s media, volume and Fs only work when connected via USB.\n","date":"2021-08-05T00:00:00Z","permalink":"https://jcalado.com/post/2021/08/05/qmk-anne-pro/","title":"QMK on the Anne Pro from Windows"},{"content":"\nWhat is VDO.ninja? Bring live video from your smartphone, remote computer, or friends directly into OBS or other studio software.\nVDO.ninja uses WebRTC to send and receive video and audio streams over the public internet, while keeping the latency as low as possible. There are no servers involved in bouncing the video around, apart from very specific cases.\nWhat is invite.vdo.ninja? Invite.vdo.ninja is a way to generate custom invite urls for, well, vdo.ninja.\nIf you are only starting your ninja journey, it can help you extract more from it without needing to dive too deep onto the documentation.\nExample use case Want to generate a ninja invite with:\nAuto-selected \u0026amp; auto-started webcam Use a password Label the user, so you can use it later Custom predefined link for your mixer software Say no more.\nMake it so Visit invite.vdo.ninja Set a custom push ID inside the Invite panel, under Custom Push ID. In this case I chose thisISmycustomLink. Pick a password and set it up as well. I chose passwordisSafe. Select webcam under the Sharing types panel. Select the Auto-Start option under Guest Features. Type a display name while you‚Äôre at it ‚Äì it‚Äôs the Set display name option. I chose Joel. Make sure you click out of the field for the generated URL to update. The generated link is at the bottom of the page. You can click the ‚ÄúObfuscate‚Äù button near the link to make it a really long and really complicated URL. This will prevent my friend from messing with any of the options I set. You can copy the link to send to your guest by just clicking on it. Then pull in your guest\u0026rsquo;s / friend webcam inside your OBS with the link https://vdo.ninja/?view=CUSTOM_ID\u0026amp;password=PASSWORD.\nReplace CUSTOM_ID with your push id, in my case: thisISmycustomLink.\nReplace PASSWORD with your password, in my case: passwordisSafe.\nYou can just drag and drop this url on the Scenes panel of OBS and it will take care of everything for you. You can also manually set it up by adding a new browser source and pasting in the link.\nIn any case, make sure that browser source has ‚ÄúControl audio via OBS‚Äù active.\nVideo tutorial There\u0026rsquo;s a whole lot more that can be done with invite.vdo.ninja.\nExplore the site, learn ninja, be the ninja!\n","date":"2021-05-17T00:00:00Z","permalink":"https://jcalado.com/post/2021/05/07/invite.obs.ninja/","title":"invite.vdo.ninja"}]